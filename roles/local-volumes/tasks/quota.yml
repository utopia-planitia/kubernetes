
- name: collect volume configurations
  set_fact:
     path: "{{ xfs_location.xfs.root }}{{ xfs_location.xfs.sub_directory }}/{{ volume.1.name }}-{{ volume_count }}"
     name: "{{ volume.1.name }}-{{ volume_count }}"
     xfs_project_id: "{{ xfs_quota_project_id_prefix }}{{ volume.0 }}{{ volume_count }}"
     xfs_location_name: "{{ xfs_location.xfs.root[1:] | replace('/','-') }}-{{ xfs_location.xfs.sub_directory[1:] | replace('/','-') }}"
     inodes: "{{ volume.1.inodes | default (5000) }}"
     size: "{{ volume.1.size | default ('100M') }}"

- name: creates directories
  file:
    path: "{{ path }}"
    state: directory
    recurse: yes

- name: check blocks
  shell: "xfs_quota -x -c 'quota -p {{ xfs_project_id }} -vbNh' {{ path }} {{ xfs_location.xfs.root }} | awk '{print $4}'"
  register: blocks_result
  changed_when: false

- name: check inodes
  shell: "xfs_quota -x -c 'quota -p {{ xfs_project_id }} -viN' {{ path }} {{ xfs_location.xfs.root }} | awk '{print $4}'"
  register: inodes_result
  changed_when: false

- name: create project
  command: "xfs_quota -x -c 'project -s -p {{ path }} {{ xfs_project_id }}' {{ xfs_location.xfs.root }}"
  when:
    - blocks_result.stdout != size or inodes_result.stdout != inodes

- name: set limit
  command: "xfs_quota -x -c 'limit -p bhard={{ size }} ihard={{ inodes }} {{ xfs_project_id }}' {{ xfs_location.xfs.root }}"
  when:
    - blocks_result.stdout != size or inodes_result.stdout != inodes

- name: render labeled volume definition
  template:
    src: volume.yml.j2
    dest: "addons/labeled-volume/{{ inventory_hostname }}-{{ xfs_location_name }}-{{ name }}.yml"
  delegate_to: localhost
  when: type == "labeled"

- name: mount managed volume
  mount:
    state: mounted
    src: "{{ path }}"
    path: "/var/lib/local-storage/{{ xfs_location_name }}-{{ name }}"
    fstype: none
    opts: bind
  when: type == "managed"

---

- name: generate SSH key directory
  file:
    path: /root/.ssh
    state: directory
    recurse: yes

- name: generate SSH key
  command: ssh-keygen -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N ""
  args:
    creates: /root/.ssh/id_rsa

- name: upload public ssh key
  digital_ocean:
    state: present
    command: ssh
    name: "{{ DIGITAL_OCEAN_KEYPAIR_NAME }}"
    ssh_pub_key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
  register: ssh_key_at_digital_ocean

- name: launch instances
  digital_ocean:
    state: present
    command: droplet
    name: "{{ DIGITAL_OCEAN_NODES_PREFIX }}-{{ item.name }}"
    size_id: "{{ flavor }}"
    image_id: "{{ image }}"
    region_id: "{{ region_name }}"
    ssh_key_ids: "{{ ssh_key_at_digital_ocean.ssh_key.id }}"
    unique_name: yes
  register: droplet_details
  with_items: "{{ servers }}"
  when: item.name == "{{ NODE_NAME | default(item.name) }}"

- name: remove old inventory file
  copy:
    dest: ./inventory
    content: ""

- name: load empty inventory
  meta: refresh_inventory

- name: add hosts to inventory
  add_host:
    name: "{{ DIGITAL_OCEAN_NODES_PREFIX }}-{{ item.item.name }}"
    groups: "{{ item.item.groups }}"
    ansible_host: "{{ item.droplet.ip_address }}"
  with_items: "{{ droplet_details.results }}"

---

- name: set up a Certificate directory
  file:
    path: "{{ master_cert_dir }}"
    state: directory
    recurse: true

- name: render master certificate configuration
  template:
    src: "master.json.j2"
    dest: "{{ master_cert_dir }}/master.json"

- name: render nodes certificate configuration
  template:
    src: "node.json.j2"
    dest: "{{ master_cert_dir }}/node-{{ item }}.json"
  with_items: "{{ groups['all'] }}"

- name: set up a Apiserver Certificate Authority
  shell: |
    set -euo pipefail
    cfssl gencert -initca {{ master_config_dir }}/ca.json | cfssljson -bare ca
  args:
    chdir: "{{ master_cert_dir }}"
    creates: "ca-key.pem"
    executable: /bin/bash

- name: set up a Client Certificate Authority
  shell: |
    set -euo pipefail
    cfssl gencert -initca {{ master_config_dir }}/ca.json | cfssljson -bare client-ca
  args:
    chdir: "{{ master_cert_dir }}"
    creates: "client-ca-key.pem"
    executable: /bin/bash

- name: set up admin certificate
  shell: |
    set -euo pipefail
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config={{ master_config_dir }}/config.json \
    -profile=kubernetes {{ master_config_dir }}/admin.json | cfssljson -bare admin
  args:
    chdir: "{{ master_cert_dir }}"
    creates: "admin-key.pem"
    executable: /bin/bash

- name: set up admin config file
  shell: |
    set -euo pipefail
    kubectl --kubeconfig=admin-kube-config config set-cluster default \
    --server=https://{{ hostvars[groups['masters'][0]]['ansible_host'] }}:6443 --embed-certs=true \
    --certificate-authority=ca.pem
    kubectl --kubeconfig=admin-kube-config config set-credentials default --embed-certs=true \
    --client-certificate=admin.pem --client-key=admin-key.pem
    kubectl --kubeconfig=admin-kube-config config set-context default --cluster=default --user=default --namespace=default
    kubectl --kubeconfig=admin-kube-config config use-context default
  args:
    chdir: "{{ master_cert_dir }}"
    creates: admin-kube-config
    executable: /bin/bash

- name: set up kube-proxy certificate
  shell: |
    set -euo pipefail
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config={{ master_config_dir }}/config.json \
    -profile=kubernetes {{ master_config_dir }}/kube-proxy.json | cfssljson -bare kube-proxy
  args:
    chdir: "{{ master_cert_dir }}"
    creates: "kube-proxy-key.pem"
    executable: /bin/bash

- name: set up kube-proxy file
  shell: |
    set -euo pipefail
    kubectl --kubeconfig=kube-proxy-config config set-cluster default --server=https://127.0.0.1:6443 --embed-certs=true --certificate-authority=ca.pem
    kubectl --kubeconfig=kube-proxy-config config set-credentials default --embed-certs=true --client-certificate=admin.pem --client-key=admin-key.pem
    kubectl --kubeconfig=kube-proxy-config config set-context default --cluster=default --user=default
    kubectl --kubeconfig=kube-proxy-config config use-context default
  args:
    chdir: "{{ master_cert_dir }}"
    creates: kube-proxy-config
    executable: /bin/bash

- name: set up nodes certificate
  shell: |
    set -euo pipefail
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config={{ master_config_dir }}/config.json \
    -profile=kubernetes node-{{ item }}.json | cfssljson -bare node-{{ item }}
  args:
    chdir: "{{ master_cert_dir }}"
    creates: "node-{{ item }}-key.pem"
    executable: /bin/bash
  with_items: "{{ groups['all'] }}"

- name: set up nodes config file
  shell: |
    set -euo pipefail
    kubectl --kubeconfig=node-{{ item }}-kube-config config set-cluster default --server=https://127.0.0.1:6443 \
    --embed-certs=true --certificate-authority=ca.pem
    kubectl --kubeconfig=node-{{ item }}-kube-config config set-credentials default --embed-certs=true \
    --client-certificate=node-{{ item }}.pem --client-key=node-{{ item }}-key.pem
    kubectl --kubeconfig=node-{{ item }}-kube-config config set-context default --cluster=default --user=default
    kubectl --kubeconfig=node-{{ item }}-kube-config config use-context default
  args:
    chdir: "{{ master_cert_dir }}"
    creates: "node-{{ item }}-kube-config"
    executable: /bin/bash
  with_items: "{{ groups['all'] }}"

- name: set up master certificate
  shell: |
    set -euo pipefail
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config={{ master_config_dir }}/config.json -profile=kubernetes master.json | cfssljson -bare master
  args:
    chdir: "{{ master_cert_dir }}"
    creates: "master-key.pem"
    executable: /bin/bash

- name: set up controller certificate
  shell: |
    set -euo pipefail
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config={{ master_config_dir }}/config.json \
    -profile=kubernetes {{ master_config_dir }}/controller.json | cfssljson -bare kube-controller-manager
  args:
    chdir: "{{ master_cert_dir }}"
    creates: "kube-controller-manager-key.pem"
    executable: /bin/bash

- name: set up kube-controller-manager file
  shell: |
    set -euo pipefail
    kubectl --kubeconfig=kube-controller-manager-kube-config config set-cluster default --server=https://127.0.0.1:6443 \
    --embed-certs=true --certificate-authority=ca.pem
    kubectl --kubeconfig=kube-controller-manager-kube-config config set-credentials default --embed-certs=true \
    --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem
    kubectl --kubeconfig=kube-controller-manager-kube-config config set-context default --cluster=default --user=default
    kubectl --kubeconfig=kube-controller-manager-kube-config config use-context default
  args:
    chdir: "{{ master_cert_dir }}"
    creates: kube-controller-manager-config
    executable: /bin/bash

- name: set up scheduler certificate
  shell: |
    set -euo pipefail
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config={{ master_config_dir }}/config.json \
    -profile=kubernetes {{ master_config_dir }}/scheduler.json | cfssljson -bare kube-scheduler
  args:
    chdir: "{{ master_cert_dir }}"
    creates: "kube-scheduler-key.pem"
    executable: /bin/bash

- name: set up kube-scheduler file
  shell: |
    set -euo pipefail
    kubectl --kubeconfig=kube-scheduler-kube-config config set-cluster default --server=https://127.0.0.1:6443 \
    --embed-certs=true --certificate-authority=ca.pem
    kubectl --kubeconfig=kube-scheduler-kube-config config set-credentials default --embed-certs=true \
    --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem
    kubectl --kubeconfig=kube-scheduler-kube-config config set-context default --cluster=default --user=default
    kubectl --kubeconfig=kube-scheduler-kube-config config use-context default
  args:
    chdir: "{{ master_cert_dir }}"
    creates: kube-scheduler-config
    executable: /bin/bash
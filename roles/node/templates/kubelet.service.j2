[Unit]
Description=Kubelet
{% if inventory_hostname_short in groups['docker'] -%}
After=docker.service
Requires=docker.service
{% endif -%}
{% if inventory_hostname_short in groups['crio'] -%}
After=crio.service
Requires=crio.service
{% endif -%}

[Service]
ExecStart=/bin/sh -c '/usr/local/bin/kubelet \
  --anonymous-auth=false \
  --authentication-token-webhook=true \
  --pod-manifest-path=/etc/kubernetes/manifests \
  --register-node=true \
  {% if inventory_hostname_short in groups['masters'] -%}
  --node-labels=node-role.kubernetes.io/worker=worker,node-role.kubernetes.io/master=master \
  {% else %}
  --node-labels=node-role.kubernetes.io/worker=worker \
  {% endif -%}
  {% if inventory_hostname_short in groups['docker'] -%}
  --container-runtime docker \
  {% endif -%}
  {% if inventory_hostname_short in groups['crio'] -%}
  --container-runtime=remote \
  --container-runtime-endpoint=unix:///var/run/crio/crio.sock \
  --runtime-request-timeout=10m \
  --cgroup-driver=systemd \
  {% endif -%}
  --image-pull-progress-deadline=2m \
  --allow-privileged=true \
  --cluster-dns=10.16.0.3 \
  --cluster-domain=cluster.local \
  --kubeconfig=/etc/kubelet/kubeconfig \
  --serialize-image-pulls=false \
  --client-ca-file=/etc/kubelet/ca.pem \
  --tls-cert-file=/etc/kubelet/kubelet.pem \
  --tls-private-key-file=/etc/kubelet/kubelet-key.pem \
  --network-plugin=cni \
  --node-ip={{ wireguard_private_ip }} \
  --max-open-files={{ kubelet_max_open_files | int }} \
  --max-pods={{ kubelet_max_pods | int }} \
  --kube-reserved={{ kubelet_kube_reserved }} \
  --system-reserved={{ kubelet_system_reserved }} \
  --eviction-hard="{{ kubelet_eviction_hard }}" \
  --eviction-soft="{{ kubelet_eviction_soft }}" \
  --eviction-soft-grace-period={{ kubelet_eviction_soft_grace_period }} \
  --feature-gates={{ feature_gates }} \
  --read-only-port=0 \
  --protect-kernel-defaults=true \
  2>&1 | tee -a /var/log/kubelet.log '
Restart=on-failure
ResetSec=5

[Install]
WantedBy=multi-user.target

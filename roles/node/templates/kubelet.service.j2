[Unit]
Description=Kubelet
After=docker.service
Requires=docker.service

[Service]
ExecStart=/bin/sh -c '/opt/bin/kubelet \
  --anonymous-auth=false \
  --authentication-token-webhook=true \
  --pod-manifest-path=/etc/kubernetes/manifests \
  --register-node=true \
  {% if inventory_hostname_short in groups['masters'] -%}
  --node-labels=node.kubernetes.io/worker=worker,node.kubernetes.io/master=master \
  {% else %}
  --node-labels=node.kubernetes.io/worker=worker \
  {% endif -%}
  --container-runtime docker \
  --image-pull-progress-deadline=2m \
  --allow-privileged=true \
  --cluster-dns=169.254.20.10 \
  --cluster-domain=cluster.local \
  --kubeconfig=/etc/kubelet/kubeconfig \
  --serialize-image-pulls=false \
  --client-ca-file=/etc/kubelet/ca.pem \
  --tls-cert-file=/etc/kubelet/kubelet.pem \
  --tls-private-key-file=/etc/kubelet/kubelet-key.pem \
  --network-plugin=cni \
  --node-ip={{ wireguard_private_ip }} \
  --max-open-files={{ kubelet_max_open_files | int }} \
  --max-pods={{ kubelet_max_pods | int }} \
  --kube-reserved={{ kubelet_kube_reserved }} \
  --system-reserved={{ kubelet_system_reserved }} \
  --eviction-hard="{{ kubelet_eviction_hard }}" \
  --eviction-soft="{{ kubelet_eviction_soft }}" \
  --eviction-soft-grace-period={{ kubelet_eviction_soft_grace_period }} \
  --feature-gates={{ feature_gates }} \
  --read-only-port=0 \
  --protect-kernel-defaults=true \
  --volume-plugin-dir=/var/lib/kubelet/volumeplugins \
  2>&1 | tee -a /var/log/kubelet.log '
Restart=on-failure
ResetSec=5

[Install]
WantedBy=multi-user.target

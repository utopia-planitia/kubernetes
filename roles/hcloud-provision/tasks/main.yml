---
- debug:
    msg: "TOKEN {{ HCLOUD_TOKEN }} "
# create an ssh key
# - hcloud_ssh_key:
#     name: hcloud-ssh-key
#     public_key: "{{lookup('file', './hcloud-ssh-key/id_rsa.pub')}}"

- name: set ssh-key and token
  hcloud_ssh_key:
    state: list
    token : "{{ HCLOUD_TOKEN }}"
  register: 'hcloud_ssh_keys'

# create some servers at once
- name: create servers
  hcloud_server:
    name:
    - "{{ HCLOUD_NODES_PREFIX }}-{{ item.name }}"
    image: "{{ image }}"
    server_type: "{{ server_type }}"
    location: "{{ location }}"
    ssh_keys: "{{ hcloud_ssh_keys.ssh_keys }}"
    token : "{{ HCLOUD_TOKEN }}"
  with_items: "{{ servers }}"
  register: hcloud_details

#- debug:
#    msg: "System {{ item.servers[0].status }} "
#  with_items: "{{ hcloud_details.results }}"


# ensure server is running (if the server already exists)

- name: wait for environment
  wait_for: timeout=15
  
- name: check for running servers
  hcloud_server:
   name:
   - "{{ HCLOUD_NODES_PREFIX }}-{{ item.name }}"
   state: running
   token : "{{ HCLOUD_TOKEN }}"

  with_items: "{{ servers }}"

- name: remove old inventory file
  copy:
    dest: ./inventory
    content: ""

- name: load empty inventory
  meta: refresh_inventory

- name: add hosts to inventory
  add_host:
    name: "{{ HCLOUD_NODES_PREFIX }}-{{ item.item.name }}"
    groups: "{{ item.item.groups }}"
    ansible_host: "{{ item.servers[0].public_ipv4 }}"
  with_items: "{{ hcloud_details.results }}"

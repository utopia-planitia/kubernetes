stages:
  - prepare
  - build
  - tests
  - e2e parallel
  - e2e serial
  - destroy

variables:
  DEV_TOOLS_IMAGE:            ${CI_REGISTRY_IMAGE}-tools:latest
  KUBECONFIG:                 ${CI_PROJECT_DIR}/certificates/master/admin-kube-config
  E2E_PARALLELIZATION:        25
  OVH_REGION_NAME:            SBG3
  CI_PROVISION:               ovh
  OVH_NODES_PREFIX:           ci-${CI_PIPELINE_ID}
  OVH_KEYPAIR_NAME:           utopia-planitia-ci-runner
  DIGITAL_OCEAN_NODES_PREFIX: ci-${CI_PIPELINE_ID}
  DIGITAL_OCEAN_KEYPAIR_NAME: utopia-planitia-ci-runner

lint:
  stage: prepare
  image: ${DEV_TOOLS_IMAGE}
  script:
    - ansible-lint *.yml roles

provision:
  stage: prepare
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - mkdir ~/.ssh
    - echo ${SSH_KEY_PRIVATE} | base64 -d > ~/.ssh/id_rsa
    - echo ${SSH_KEY_PUBLIC}  | base64 -d > ~/.ssh/id_rsa.pub
    - chmod 400 ~/.ssh/id_rsa ~/.ssh/id_rsa.pub
    - touch inventory
    - make ${CI_PROVISION}-provision
    - make certificates
    - cat inventory
  artifacts:
    paths:
      - certificates
      - inventory

destroy:
  stage: destroy
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - make ${CI_PROVISION}-destroy

destroy now:
  stage: destroy
  image: ${DEV_TOOLS_IMAGE}
  script:
    - make ${CI_PROVISION}-destroy
  when: manual

deploy:
  stage: build
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - mkdir ~/.ssh
    - echo ${SSH_KEY_PRIVATE} | base64 -d > ~/.ssh/id_rsa
    - echo ${SSH_KEY_PUBLIC}  | base64 -d > ~/.ssh/id_rsa.pub
    - chmod 400 ~/.ssh/id_rsa ~/.ssh/id_rsa.pub
    - make deploy
  artifacts:
    paths:
      - addons/labeled-volumes
      - certificates/users

redeploy:
  stage: tests
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - mkdir ~/.ssh
    - echo ${SSH_KEY_PRIVATE} | base64 -d > ~/.ssh/id_rsa
    - echo ${SSH_KEY_PUBLIC}  | base64 -d > ~/.ssh/id_rsa.pub
    - chmod 400 ~/.ssh/id_rsa ~/.ssh/id_rsa.pub
    - ansible-playbook deploy.yml ${ANSIBLE_OPTIONS} | tee deploy.log
    - grep "changed=0    unreachable=0    failed=0" deploy.log | wc -l | grep 4

bats:
  stage: tests
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - mkdir ~/.ssh
    - echo ${SSH_KEY_PRIVATE} | base64 -d > ~/.ssh/id_rsa
    - echo ${SSH_KEY_PUBLIC}  | base64 -d > ~/.ssh/id_rsa.pub
    - chmod 400 ~/.ssh/id_rsa ~/.ssh/id_rsa.pub
    - make bats

cleanup e2e ns:
  stage: destroy
  image: ${DEV_TOOLS_IMAGE}
  script:
    - make delete-e2e-namespaces
  when: manual

conformance:
  stage: e2e parallel
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - make conformance

port-forward:
  stage: e2e parallel
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - make port-forward

serial:
  stage: e2e serial
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - make serial

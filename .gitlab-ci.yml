stages:
  - prepare
  - build
  - tests
  - destroy

variables:
  DEV_TOOLS_IMAGE: ${CI_REGISTRY_IMAGE}-tools:v1
  KUBECONFIG:      ${CI_PROJECT_DIR}/certificates/master/admin-kube-config

before_script:
  - mv .ssh ~/.ssh

lint:
  stage: prepare
  image: ${DEV_TOOLS_IMAGE}
  before_script: []
  script:
    - ansible-lint *.yml roles

provision:
  stage: prepare
  image: ${DEV_TOOLS_IMAGE}
  before_script: []
  retry: 2
  script:
    - mkdir ~/.ssh
    - echo ${SSH_KEY_PRIVATE} | base64 -d > ~/.ssh/id_rsa
    - echo ${SSH_KEY_PUBLIC}  | base64 -d > ~/.ssh/id_rsa.pub
    - chmod 400 ~/.ssh/id_rsa ~/.ssh/id_rsa.pub
    - cp -a ~/.ssh .ssh
    - touch inventory
    - ansible-playbook ovh-provision.yml -e "OVH_NODES_PREFIX=CI-${CI_PIPELINE_ID} OVH_KEYPAIR_NAME=ci-runner" ${ANSIBLE_OPTIONS}
  artifacts:
    paths:
      - inventory
      - .ssh

destroy:
  stage: destroy
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - ansible-playbook ovh-destroy.yml -e "OVH_NODES_PREFIX=CI-${CI_PIPELINE_ID}" ${ANSIBLE_OPTIONS}
  when: always

deploy:
  stage: build
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - ansible-playbook deploy.yml ${ANSIBLE_OPTIONS}
    - bash etc/wait-for-kubernetes-control-plane.sh
  artifacts:
    paths:
      - certificates

redeploy:
  stage: tests
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - ansible-playbook deploy.yml ${ANSIBLE_OPTIONS} | tee deploy.log
    - grep "changed=0    unreachable=0    failed=0" deploy.log | wc -l | grep 5

overlay2:
  stage: tests
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - bats tests/overlay2.bats

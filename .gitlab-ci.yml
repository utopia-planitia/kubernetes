stages:
  - prepare
  - build
  - tests
  - e2e parallel
  - e2e serial
  - destroy

variables:
  DEV_TOOLS_IMAGE:            ${CI_REGISTRY_IMAGE}-tools:v4
  KUBECONFIG:                 ${CI_PROJECT_DIR}/certificates/master/admin-kube-config
  E2E_PARALLELIZATION:        25
  OVH_REGION_NAME:            SBG3
  CI_PROVISION:               ovh
  OVH_NODES_PREFIX:           ci-${CI_PIPELINE_ID}
  DIGITAL_OCEAN_NODES_PREFIX: ci-${CI_PIPELINE_ID}

lint:
  stage: prepare
  image: ${DEV_TOOLS_IMAGE}
  script:
    - ansible-lint *.yml roles

provision:
  stage: prepare
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - mkdir ~/.ssh
    - echo ${SSH_KEY_PRIVATE} | base64 -d > ~/.ssh/id_rsa
    - echo ${SSH_KEY_PUBLIC}  | base64 -d > ~/.ssh/id_rsa.pub
    - export OVH_KEYPAIR_NAME=ci-runner
    - chmod 400 ~/.ssh/id_rsa ~/.ssh/id_rsa.pub
    - touch inventory
    - make ${CI_PROVISION}-provision
    - make certificates
    - cat inventory
  artifacts:
    paths:
      - inventory
      - certificates

destroy:
  stage: destroy
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - make ${CI_PROVISION}-destroy

destroy now:
  stage: destroy
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - make ${CI_PROVISION}-destroy
  when: manual

deploy:
  stage: build
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - mkdir ~/.ssh
    - echo ${SSH_KEY_PRIVATE} | base64 -d > ~/.ssh/id_rsa
    - echo ${SSH_KEY_PUBLIC}  | base64 -d > ~/.ssh/id_rsa.pub
    - chmod 400 ~/.ssh/id_rsa ~/.ssh/id_rsa.pub
    - ansible-playbook deploy.yml ${ANSIBLE_OPTIONS}
    - bash etc/wait-for-nodes.sh
    - kubectl apply -f addons/ -f certificates/addons/
    - bash etc/wait-for-addons.sh

redeploy:
  stage: tests
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - mkdir ~/.ssh
    - echo ${SSH_KEY_PRIVATE} | base64 -d > ~/.ssh/id_rsa
    - echo ${SSH_KEY_PUBLIC}  | base64 -d > ~/.ssh/id_rsa.pub
    - chmod 400 ~/.ssh/id_rsa ~/.ssh/id_rsa.pub
    - ansible-playbook deploy.yml ${ANSIBLE_OPTIONS} | tee deploy.log
    - grep "changed=0    unreachable=0    failed=0" deploy.log | wc -l | grep 4

bats:
  stage: tests
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - mkdir ~/.ssh
    - echo ${SSH_KEY_PRIVATE} | base64 -d > ~/.ssh/id_rsa
    - echo ${SSH_KEY_PUBLIC}  | base64 -d > ~/.ssh/id_rsa.pub
    - chmod 400 ~/.ssh/id_rsa ~/.ssh/id_rsa.pub
    - bats tests/

e2e tests 1/2:
  stage: e2e parallel
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - ./etc/delete-e2e-namespaces.sh
    - cd /go/src/k8s.io/kubernetes
    - go run hack/e2e.go -get=false -- -v --test --check-version-skew=false --provider=skeleton --test_args="--ginkgo.focus=\[Conformance\]|port-forward --ginkgo.skip=\[Serial\]|\[Flaky\]|\[Feature:.+\]" --ginkgo-parallel=${E2E_PARALLELIZATION}

e2e tests 2/2:
  stage: e2e serial
  image: ${DEV_TOOLS_IMAGE}
  retry: 2
  script:
    - ./etc/delete-e2e-namespaces.sh
    - cd /go/src/k8s.io/kubernetes
    - go run hack/e2e.go -get=false -- -v --test --check-version-skew=false --provider=skeleton --test_args="--ginkgo.focus=\[Serial\].*\[Conformance\]"
